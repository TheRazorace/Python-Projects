import time
import random
import sys

print("Αλγόριθμος Divide&Conquer --> O(nlogn)")
print("Θα δημιουργήσουμε δύο λίστες, η μία με διπλάσιο αριθμό στοιχείων από την άλλη, με seed τον ΑΜ και τιμές στο διάστημα (-100, 100)")
print("Επιλέξτε 1 για λίστες 5000 και 10000 στοιχείων αντιστοίχως.")
print("Επιλέξτε 2 για να καθορίσετε τον αριθμό στοιχείων")

#Καθορισμός μεγέθου λίστας
e = int(input("Επιλογή:" ))
if e==1:
    num=5000
elif e==2:
    print("Επιλογή αριθμού στοιχείων. Για παράδειγμα, επιλέξτε 100 για να δημιουργήσετε δύο λίστες των 100 και των 200 στοιχείων αντιστοίχως.")
    num=int(input("Επιλογή:" ))
else:
    print("Δεν υπάρχει αυτή η επιλογή! Ξαναπροσπαθήστε...")
    sys.exit()
    

#Συνάρτηση που δημιουργεί την λίστα με seed τον ΑΜ
random.seed(1053711)
def makeArr(num, maxn):
    arr = [0]*num                              #Δημιουργώ μία κενή λίστα με το δοσμένο μέγεθος
    for i in range (num):                      #Την γεμίζω με τυχαίους αριθμούς στο δοσμένο διάστημα
        arr[i] = random.randint(-maxn, maxn)
    return arr

arr = makeArr(num,100)
double_arr = makeArr(2*num, 100)


#Συνάρτηση που υπολογίζει το μέγιστο υποάθροισμα
def dnc(arr, lo, hi):
    if hi == lo:                                                                #Για λίστα χωρίς στοιχεία       
        return (0, 0, 0)               
    elif hi == lo + 1:                                                          #Για λίστα ενός στοιχείου            
        if arr[lo] > 0:
            return (arr[lo], lo, hi)
        else:
            return (0, lo, lo)
    else:                                                                       #Για λίστα παραπάνω του ενός στοιχείου
        mid = (lo + hi) // 2                                                    #Εύρεση της μέσης της λιστας
        
        left_sum = 0                                                            #Άθροισμα στοιχείων αριστερού κομματιού     
        left_max = (0, mid)                                                                         
        for i in range(mid-1, lo-1, -1):                                        #Επανάληψη για σκανάρισμα αριστερού κομματιού
            left_sum += arr[i]
            if left_sum > left_max[0]:                                          #Καταχώρηση αποτελέσματος αν είναι καλύτερο
                left_max = (left_sum,i)
            
        right_sum = 0                                                           #Άθροισμα στοιχείων δεξιού κομματιού
        right_max = (0, mid)                                                    
        for j in range(mid+1, hi+1):                                            #Επανάληψη για σκανάρισμα δεξιού κομματιού
            right_sum += arr[j-1]
            if right_sum > right_max[0]:                                        #Καταχώρηση αποτελέσματος αν είναι καλύτερο
                right_max = (right_sum,j)

        scan = (left_max[0]+right_max[0], left_max[1], right_max[1])            #Αποτελέσματα
        return max(dnc(arr, lo, mid), dnc(arr, mid, hi), scan)                  #Σύγκριση αριστερού, δεξιού κομματιού της λίστας και μέσης και επιστροφή αποτελέσματος          

print("Γίνεται υπολογισμός...")
to = time.time()                        #Αρχή πρώτης χρονομέτρησης
m=dnc(arr, 0, len(arr))                 #Υπολογισμός μέγιστου υποαθροίσματος πρώτου πίνακα
t1 = time.time()                        #Τέλος πρώτης χρονομέτρησης, αρχή δεύτερης χρονομέτρησησς                       
d = dnc(double_arr, 0, len(double_arr)) #Υπολογισμός μέγιστου υποαθροίσματος δεύτερου πίνακα
t2 = time.time()                        #Τέλος δεύτερης χρονομέτρησης

print("Μέγιστο υπό-άθροισμα λίστας", num,"στοιχείων:", m[0])
print("Θέση αρχής μέγιστης υπό-λίστας:", m[1],". Θέση τέλους μέγιστης υπό-λίστας:", m[2],".")
print("Χρόνος υπολογισμού:",t1 - to,'seconds')
print("Μέγιστο υπό-άθροισμα λίστας", 2*num,"στοιχείων:", d[0])
print("Θέση αρχής μέγιστης υπό-λίστας:", d[1],". Θέση τέλους μέγιστης υπό-λίστας:", d[2],".")
print("Χρόνος υπολογισμού:",t2 - t1,'seconds')

